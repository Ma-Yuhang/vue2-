{"version":3,"file":"vue.js","sources":["../src/compiler/parse.js","../src/compiler/index.js","../src/observe/dep.js","../src/observe/watcher.js","../src/vdom.js","../src/lifecycle.js","../src/observe/array.js","../src/observe/index.js","../src/state.js","../src/init.js","../src/index.js"],"sourcesContent":["const ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`\r\nconst startTagOpan = new RegExp(`^<${qnameCapture}`)\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`)\r\n// 匹配属性\r\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>']+)))?/\r\nconst startTagClose = /^\\s*(\\/?)>/\r\n\r\n// 对模板进行编译处理\r\nexport function parseHTML(html) {\r\n  const ELEMENT_TYPE = 1\r\n  const TEXT_TYPE = 3\r\n  const stack = [] // 用于存放元素的栈\r\n  let currentParent // 指向的是栈中的最后一个\r\n  let root\r\n\r\n  function createASTElement(tag, attrs) {\r\n    return {\r\n      tag,\r\n      type: ELEMENT_TYPE,\r\n      children: [],\r\n      attrs,\r\n      parent: null\r\n    }\r\n  }\r\n  function start(tag, attrs) {\r\n    let node = createASTElement(tag, attrs)\r\n    if (!root) { // 一上来没有root时\r\n      root = node\r\n    }\r\n    if (currentParent) {\r\n      node.parent = currentParent\r\n      currentParent.children.push(node)\r\n    }\r\n    stack.push(node) // 添加到栈中\r\n    currentParent = node // currentParent为栈中的最后一个\r\n  }\r\n  function chars(text) {\r\n    text = text.replace(/\\s/g, '')\r\n    text && currentParent.children.push({\r\n      type: TEXT_TYPE,\r\n      text,\r\n      parent: currentParent\r\n    })\r\n  }\r\n  function end(tag) {\r\n    stack.pop() // 弹出最后一个\r\n    currentParent = stack[stack.length - 1]\r\n  }\r\n  function advance(n) {\r\n    html = html.slice(n)\r\n  }\r\n  function parseStartTag() {\r\n    const start = html.match(startTagOpan)\r\n    if (start) {\r\n      const match = {\r\n        tagName: start[1],\r\n        attrs: []\r\n      }\r\n      advance(start[0].length) // <div\r\n      // console.log(match, html);\r\n      let attr, end\r\n      while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\r\n        advance(attr[0].length)\r\n        match.attrs.push({ name: attr[1], value: attr[3] || attr[4] || attr[5] || true })\r\n      }\r\n      if (end) {\r\n        advance(end[0].length)\r\n      }\r\n      // console.log(match);\r\n      return match\r\n    }\r\n    return false\r\n  }\r\n  while (html) {\r\n    // 如果textend等于0说明是开始标签\r\n    // 如果textend > 0说明文本结束\r\n    let textEnd = html.indexOf('<')\r\n    if (textEnd === 0) {\r\n      const startTagMatch = parseStartTag() // 开始标签的匹配结果\r\n      if (startTagMatch) {\r\n        start(startTagMatch.tagName, startTagMatch.attrs)\r\n        continue\r\n      }\r\n      let endTagMatch = html.match(endTag)\r\n      if (endTagMatch) {\r\n        advance(endTagMatch[0].length)\r\n        end(endTagMatch[1])\r\n        continue\r\n      }\r\n    }\r\n    if (textEnd > 0) {\r\n      let text = html.substring(0, textEnd) // 文本内容\r\n      if (text) {\r\n        chars(text)\r\n        advance(text.length)\r\n      }\r\n    }\r\n  }\r\n  return root\r\n}","import { parseHTML } from \"./parse\";\r\n\r\nfunction genProps(attrs) {\r\n  // console.log(attrs, '1');\r\n  let str = ''\r\n  attrs.forEach(attr => {\r\n    if (attr.name == 'style') {\r\n      let obj = {}\r\n      attr.value.split(';').forEach(item => {\r\n        if (!item) return\r\n        let [key, value] = item.split(':')\r\n        obj[key] = value.trim()\r\n      })\r\n      attr.value = obj\r\n    }\r\n    str += `${attr.name}:${JSON.stringify(attr.value)},`\r\n  })\r\n  return `{${str.slice(0, -1)}}`\r\n}\r\n// 匹配{{}}\r\nconst defaultTagClose = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g\r\nfunction gen(child) {\r\n  if (child.type === 1) { // 是元素节点继续生成code\r\n    return codegen(child)\r\n  } else {\r\n    // console.log(child);\r\n    let text = child.text\r\n    if (!defaultTagClose.test(text)) {\r\n      return `_v(${JSON.stringify(text)})`\r\n    } else {\r\n      let tokens = []\r\n      let match\r\n      defaultTagClose.lastIndex = 0\r\n      let lastIndex = 0\r\n      while (match = defaultTagClose.exec(text)) {\r\n        let index = match.index // 匹配的位置 {{name}} hello  {{name}}  hello\r\n        if (index > lastIndex) {\r\n          tokens.push(JSON.stringify(text.slice(lastIndex, index)))\r\n        }\r\n        tokens.push(`_s(${match[1].trim()})`)\r\n        lastIndex = index + match[0].length\r\n      }\r\n      if (lastIndex < text.length) {\r\n        tokens.push(text.slice(lastIndex))\r\n      }\r\n      return `_v(${tokens.join('+')})`\r\n    }\r\n  }\r\n}\r\nfunction genChildren(children) {\r\n  return children.map(child => gen(child)).join(',')\r\n}\r\nfunction codegen(ast) {\r\n  let children = genChildren(ast.children)\r\n  let code = `_c('${ast.tag}',${ast.attrs.length > 0 ? genProps(ast.attrs) : null}${ast.children.length > 0 ? `,${children}` : ''})`\r\n  return code\r\n}\r\nexport function compileToFunction(template) {\r\n  // 1.将template转换成ast语法树\r\n  let ast = parseHTML(template)\r\n  // console.log(ast);\r\n  // 2.根据ast生成render函数（render函数执行后的结果就是虚拟DOM）\r\n  let code = codegen(ast)\r\n  // console.log(code);\r\n  code = `with(this){return ${code}}`\r\n  let render = new Function(code) // 根据代码生成render函数\r\n  return render\r\n}","\r\n\r\nlet id = 0\r\nclass Dep {\r\n  constructor() {\r\n    this.id = id++\r\n    this.subs = [] // 这里对应着当前属性对应的watcher有哪些\r\n  }\r\n  depend() {\r\n    // 不希望记录重复的watcher，而且刚才值是一个单向的关系 dep -> watcher\r\n    // watcher 记录 dep\r\n    // this.subs.push(Dep.target)\r\n\r\n    Dep.target.addDep(this) // 让watcher记住dep\r\n  }\r\n  addSub(watcher) {\r\n    this.subs.push(watcher)\r\n  }\r\n  notify() {\r\n    this.subs.forEach(watcher => watcher.update())\r\n  }\r\n}\r\n\r\nDep.target = null\r\n\r\nexport default Dep","import Dep from \"./dep\"\r\n\r\n\r\nlet id = 0\r\n\r\n// 1.当我们创建渲染watcher时我们会把当前的渲染watcher放到Dep.target上\r\n// 2.调用_render() 会取值 走到get上\r\n\r\n\r\nclass Watcher {\r\n  constructor(vm, fn, options) { // 不同的组件有不同的watcher\r\n    this.id = id++\r\n    this.renderWatcher = options // true表示是一个渲染过程\r\n    this.getter = fn\r\n    this.deps = [] // 记住dep 后边实现计算属性和清理工作需要用到\r\n    this.depsId = new Set()\r\n    this.get()\r\n  }\r\n  addDep(dep) {\r\n    let id = dep.id\r\n    if (!this.depsId.has(id)) {\r\n      this.deps.push(dep)\r\n      this.depsId.add(id)\r\n      dep.addSub(this) // 让dep记住watcher\r\n    }\r\n  }\r\n  get() {\r\n    Dep.target = this // 静态属性只有一份\r\n    this.getter()  // 会去vm上取值\r\n    Dep.target = null\r\n  }\r\n  update() {\r\n    this.get() // 重新渲染\r\n  }\r\n}\r\n// 需要给每个属性增加一个dep 目的就是收集watcher\r\n// 一个组件中 有多个属性 （n个属性对应一个视图） n个dep对应一个watcher\r\n// 1个属性 对应着多个组价 1个dep对应多个watcher\r\n// dep(属性) 与 watcher(视图) 是多对多的关系\r\nexport default Watcher","export function createElementVNode(vm, tag, data, ...children) {\r\n  if(data == null) {\r\n    data = {}\r\n  }\r\n  let key = data.key\r\n  if (key) {\r\n    delete data.key\r\n  }\r\n  return vnode(vm, tag, key, data, children)\r\n}\r\nexport function createTextVNode(vm, text) {\r\n  return vnode(vm, undefined, undefined, undefined, undefined, text)\r\n}\r\nfunction vnode(vm, tag, key, data, children, text) {\r\n  return {\r\n    vm,\r\n    tag,\r\n    key,\r\n    data,\r\n    children,\r\n    text\r\n  }\r\n}","import Watcher from \"./observe/watcher\"\r\nimport { createElementVNode, createTextVNode } from \"./vdom\"\r\n\r\nfunction patchProps(el, props) {\r\n  for (const key in props) {\r\n    if (key === 'style') {\r\n      for (const styleName in props.style) {\r\n        el.style[styleName] = props.style[styleName]\r\n      }\r\n    } else {\r\n      el.setAttribute(key, props[key])\r\n      // el[key] = props[key]\r\n    }\r\n  }\r\n}\r\n// 创建真实DOM\r\nfunction createElm(vnode) {\r\n  let { tag, data, children, text } = vnode\r\n  if (typeof tag === 'string') {\r\n    vnode.el = document.createElement(tag) // 这里将真实节点和虚拟节点对应起来\r\n    patchProps(vnode.el, data)\r\n    children.forEach(item => {\r\n      vnode.el.appendChild(createElm(item))\r\n    });\r\n  } else {\r\n    vnode.el = document.createTextNode(text)\r\n  }\r\n  return vnode.el\r\n}\r\nfunction patch(oldVNode, vnode) {\r\n  // 判断是不是初始 是不是真实DOM\r\n  const isRealElement = oldVNode.nodeType\r\n  if (isRealElement) {\r\n    const parentElm = oldVNode.parentNode // 拿到旧的真实DOM的父元素\r\n    // 创建新的真实DOM\r\n    const newElm = createElm(vnode)\r\n    parentElm.removeChild(oldVNode)\r\n    parentElm.insertBefore(newElm, oldVNode.nextsibiling)\r\n    console.log(vnode);\r\n    console.log(newElm);\r\n    return newElm\r\n  } else {\r\n    // diff算法\r\n  }\r\n}\r\nexport function initLifeCycle(Vue) {\r\n  Vue.prototype._c = function (...args) { // createElementVNode\r\n    return createElementVNode(this, ...args)\r\n  }\r\n  Vue.prototype._v = function (...args) { // createTextVNode\r\n    return createTextVNode(this, ...args)\r\n  }\r\n  Vue.prototype._s = function (value) {  // 变成字符串\r\n    if (typeof value !== 'object') return value\r\n    return JSON.stringify(value)\r\n  }\r\n  Vue.prototype._render = function () {\r\n    return this.$options.render.call(this)\r\n  }\r\n  Vue.prototype._update = function (vnode) {\r\n    const el = this.$el\r\n    // console.log(vnode, el);\r\n\r\n    // 既有初始化的功能，又有更新的功能\r\n    this.$el = patch(el, vnode)\r\n  }\r\n}\r\n\r\n\r\nexport function mountComponent(vm, el) {\r\n  vm.$el = el\r\n  // 1.调用render函数 生成虚拟节点 vm._render()调用的就是vm.$options\r\n  // 2.根据虚拟DOM生成真实DOM vm._update()\r\n  const updateComponent = () => {\r\n    vm._update(vm._render())\r\n  }\r\n  const watcher = new Watcher(vm, updateComponent, true)\r\n  console.log(watcher);\r\n}","// 重写数组的7个变异方法，并且保留数组原来的方法\r\n\r\nlet oldArrayPrototype = Array.prototype\r\n\r\nexport let newArrayPrototype = Object.create(oldArrayPrototype)\r\n\r\nlet methods = [\r\n  'push',\r\n  'pop',\r\n  'unshift',\r\n  'shift',\r\n  'reverse',\r\n  'sort',\r\n  'replace'\r\n]\r\n\r\nmethods.forEach(method => {\r\n  // 重写这7个方法\r\n  newArrayPrototype[method] = function (...args) {\r\n    const res = oldArrayPrototype[method].call(this, ...args)\r\n    console.log('调用了' + method);\r\n\r\n    let inserted\r\n    let ob = this.__ob__\r\n    // 监测用户用push、unshift、splice方法添加数据\r\n    switch (method) {\r\n      case 'push':\r\n      case 'unshift':  // arr.push({a:1})\r\n        inserted = args\r\n        break;\r\n      case 'splice': // arr.splice(0,1,{a:1},{b:2})\r\n        inserted = args.slice(2)\r\n        break\r\n      default:\r\n        break;\r\n    }\r\n    if (inserted) {\r\n      ob.observeArray(inserted)\r\n    }\r\n\r\n    return res\r\n  }\r\n})","import { newArrayPrototype } from \"./array\"\r\nimport Dep from \"./dep\"\r\n\r\nclass Observer {\r\n  constructor(data) {\r\n    Object.defineProperty(data, '__ob__', {\r\n      value: this,\r\n      enumerable: false // 不可枚举\r\n    })\r\n    if (Array.isArray(data)) {\r\n      // 在这里重写数组中的7中变异方法\r\n      data.__proto__ = newArrayPrototype\r\n      this.observeArray(data) // 如果数组中有对象，可以监测到变化\r\n    } else {\r\n      this.walk(data)\r\n    }\r\n  }\r\n  walk(data) { // 循环对象 对属性依次劫持\r\n    Object.keys(data).forEach(key => defineReactive(data, key, data[key]))\r\n  }\r\n  observeArray(data) { // 对数组进行处理\r\n    data.forEach(item => observe(item))\r\n  }\r\n}\r\n\r\nexport function defineReactive(target, key, value) {\r\n  observe(value) // 递归调用 多层结构添加getter setter\r\n  let dep = new Dep()  // 每一个属性都有一个dep\r\n  // 重新定义每个属性 对每个属性添加getter setter\r\n  Object.defineProperty(target, key, {\r\n    get() {\r\n      if(Dep.target) {\r\n        dep.depend() // 让这个属性的收集器记住当前的watcher\r\n      }\r\n      return value\r\n    },\r\n    set(newValue) {\r\n      if (value === newValue) return\r\n      observe(newValue) // 用户可能修改一整个对象 vm.adds = {}\r\n      value = newValue\r\n      dep.notify() // 通知更新\r\n    }\r\n  })\r\n}\r\n\r\nexport function observe(data) {\r\n\r\n  // 对这个对象进行劫持\r\n  if (typeof data !== 'object' || data == null) {\r\n    return\r\n  }\r\n  if (data.__ob__ instanceof Observer) { // 说明被观测过了\r\n    return data.__ob__\r\n  }\r\n  return new Observer(data)\r\n}","import { observe } from \"./observe/index\"\r\n\r\nexport function initState(vm) {\r\n  const opts = vm.$options\r\n  if (opts.data) {\r\n    initData(vm)\r\n  }\r\n}\r\n\r\n// 当用户访问vm.xxx时 实际访问的是vm._data.xxx\r\n// 用户代理\r\nfunction proxy(vm, target, key) {\r\n  Object.defineProperty(vm, key, {\r\n    get() {\r\n      return vm[target][key] // vm.name => vm._data.name\r\n    },\r\n    set(newValue) {\r\n      vm[target][key] = newValue\r\n    }\r\n  })\r\n}\r\n// 初始化data\r\nfunction initData(vm) {\r\n  let data = vm.$options.data\r\n\r\n  data = typeof data === 'function' ? data.call(vm) : data\r\n\r\n  vm._data = data\r\n  observe(data)\r\n\r\n  for (const key in data) {\r\n    proxy(vm, '_data', key) // 用户代理\r\n  }\r\n}","import { compileToFunction } from \"./compiler\"\r\nimport { mountComponent } from \"./lifecycle\"\r\nimport { initState } from \"./state\"\r\n\r\nexport function initMixin(Vue) { // 给Vue添加init方法\r\n  Vue.prototype._init = function (options) {\r\n    const vm = this\r\n    vm.$options = options // 将用户的选项挂载到实例上\r\n\r\n    // 初始化数据\r\n    initState(vm)\r\n\r\n    if (options.el) {\r\n      vm.$mount(options.el)\r\n    }\r\n  }\r\n\r\n  Vue.prototype.$mount = function (el) {\r\n    const vm = this\r\n    el = document.querySelector(el)\r\n    if (!el) {\r\n      console.log('没有el');\r\n    }\r\n    const opts = vm.$options\r\n    if (!opts.render) { // 如果没有写render函数\r\n      let template\r\n      if (!opts.template && el) { // 没有写template但是写了el\r\n        template = el.outerHTML\r\n      } else if (opts.template && el) {\r\n        template = opts.template\r\n      }\r\n      const render = compileToFunction(template)\r\n      opts.render = render\r\n    }\r\n    mountComponent(vm,el) // 组件挂载 调用render\r\n  }\r\n}","import { initMixin } from \"./init\"\r\nimport { initLifeCycle } from \"./lifecycle\"\r\n\r\nfunction Vue(options) {\r\n  this._init(options)\r\n}\r\n\r\ninitMixin(Vue) // 扩展init方法\r\ninitLifeCycle(Vue) // \r\n\r\nexport default Vue"],"names":["ncname","qnameCapture","concat","startTagOpan","RegExp","endTag","attribute","startTagClose","parseHTML","html","ELEMENT_TYPE","TEXT_TYPE","stack","currentParent","root","createASTElement","tag","attrs","type","children","parent","start","node","push","chars","text","replace","end","pop","length","advance","n","slice","parseStartTag","match","tagName","attr","name","value","textEnd","indexOf","startTagMatch","endTagMatch","substring","genProps","str","forEach","obj","split","item","_item$split","_item$split2","_slicedToArray","key","trim","JSON","stringify","defaultTagClose","gen","child","codegen","test","tokens","lastIndex","exec","index","join","genChildren","map","ast","code","compileToFunction","template","render","Function","id","Dep","_classCallCheck","subs","_createClass","depend","target","addDep","addSub","watcher","notify","update","Watcher","vm","fn","options","renderWatcher","getter","deps","depsId","Set","get","dep","has","add","createElementVNode","data","_len","arguments","Array","_key","vnode","createTextVNode","undefined","patchProps","el","props","styleName","style","setAttribute","createElm","document","createElement","appendChild","createTextNode","patch","oldVNode","isRealElement","nodeType","parentElm","parentNode","newElm","removeChild","insertBefore","nextsibiling","console","log","initLifeCycle","Vue","prototype","_c","args","apply","_v","_len2","_key2","_s","_typeof","_render","$options","call","_update","$el","mountComponent","updateComponent","oldArrayPrototype","newArrayPrototype","Object","create","methods","method","_oldArrayPrototype$me","res","inserted","ob","__ob__","observeArray","Observer","defineProperty","enumerable","isArray","__proto__","walk","keys","defineReactive","observe","set","newValue","initState","opts","initData","proxy","_data","initMixin","_init","$mount","querySelector","outerHTML"],"mappings":"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"}